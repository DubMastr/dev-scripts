[user]
	name = Sebastian Schuberth
	email = sschuberth@gmail.com
[core]
	pager = less -+S
	autocrlf = true
	safecrlf = warn
[alias]
	aa = commit --amend -a --no-edit
	br = branch
	cat = "!f() { git show $2:\"$1\"; }; f"
	chmod = update-index --chmod=+x
	ci = commit -v
	co = checkout
	commit-id = "!f() { commit=${1:-HEAD}; git log -1 --patch $commit | git patch-id | cut -d' ' -f1; }; f"
	cp = cherry-pick
	dt = difftool -M
	fixup = "!f() { base=${1:-2}; git reset --soft HEAD~$base && git commit -C ORIG_HEAD~$(expr $base - 1); }; f"
	fp = fetch --all --prune
	has = branch -a --contains
	id = rev-parse --short HEAD
	in = !git fetch -q && git log --oneline ..@{u}
	out = log --oneline @{u}..
	log-day = !git log --oneline --no-merges --since=1.day --author=\"$(git config user.name)\"
	log-sprint = !git log --oneline --no-merges --since=2.weeks --author=\"$(git config user.name)\"
	ls = "!f() { git ls-tree -r --name-only ${1:-HEAD}; }; f"
	mt = mergetool
	mu = merge --ff-only @{u}
	orphan = "!f() { git checkout --orphan $1 && git rm -fr .; }; f"
	pr = pull --rebase
	ra = rebase --abort
	rc = rebase --continue
	ri = rebase -i -p
	rs = remote -v show
	ru = reset --hard @{u}
	st = status
	unpushed = log --branches --not --remotes --simplify-by-decoration --decorate --oneline
	up = "!f() { upstream=${1:-upstream/master}; head=${2:-HEAD}; git log --cherry --oneline $upstream...$head; }; f"
[color]
	ui = true
[push]
	default = simple
[rebase]
	autosquash = true
[rerere]
	enabled = true
[diff]
	renamelimit = 0
	renames = copies
[merge]
	tool = bc3
[mergetool]
	prompt = false
[mergetool "bc3"]
	path = c:/Program Files (x86)/Beyond Compare 3/BComp.com
	trustExitCode = true
